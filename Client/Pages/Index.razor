@page "/"
@using System.Linq
@using NDAProcesses.Shared.Models
@inject IHeatTreatService HeatTreatService

<PageTitle>Heat Treat Verification Measurements</PageTitle>

<div class="page-header">
    <RadzenHeading Size="H2" Text="Heat Treat Verification Measurements"></RadzenHeading>
    <RadzenText Text="Complete the verification form and capture measurements directly in the browser." Style="display:block; margin-top: 0.25rem;" />
</div>

@if (_isLoading)
{
    <div class="heat-treat-loading">
        <RadzenProgressBar Mode="ProgressBarMode.Indeterminate" Style="width: 320px;" />
        <RadzenText Text="Loading part libraryâ€¦" Style="margin-top: 0.5rem;" />
    </div>
}
else if (!string.IsNullOrWhiteSpace(_loadError))
{
    <RadzenAlert Severity="AlertSeverity.Error" Style="margin-top: 1rem;">@_loadError</RadzenAlert>
}
else
{
    <RadzenTabs Class="workbook-tabs">
        <Tabs>
            <RadzenTabsItem Text="HT Inspection Form">
                <ChildContent>
                    <div class="excel-workbook">
                        <div class="excel-grid excel-grid-24">
                            <div class="excel-cell excel-title-cell excel-span-8 align-center">HT INSPECTION FORM</div>
                            <div class="excel-cell excel-label-cell excel-span-4">Part #</div>
                            <div class="excel-cell excel-span-6">
                                <RadzenDropDown Data="_records"
                                                TextProperty="PartNumber"
                                                ValueProperty="PartNumber"
                                                @bind-Value="_form.PartNumber"
                                                TValue="string"
                                                Change="OnPartNumberChanged"
                                                AllowFiltering="true"
                                                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                                Placeholder="Search part"
                                                Style="width: 100%;" />
                            </div>
                            <div class="excel-cell excel-label-cell excel-span-3">Stamp #</div>
                            <div class="excel-cell excel-span-3">
                                <RadzenTextBox @bind-Value="_form.StampNumber" TValue="string" Style="width: 100%;" />
                            </div>

                            <div class="excel-cell excel-label-cell excel-span-4">Submission Date</div>
                            <div class="excel-cell excel-span-4">
                                <RadzenDatePicker @bind-Value="_form.Date" TValue="DateTime?" Style="width: 100%;" />
                            </div>
                            <div class="excel-cell excel-label-cell excel-span-4">Submission Time</div>
                            <div class="excel-cell excel-span-4">
                                <RadzenTimePicker Value="_form.Time" ValueChanged="OnTimeChanged" TValue="DateTime?" Style="width: 100%;" />
                            </div>
                            <div class="excel-cell excel-label-cell excel-span-4">Inspector</div>
                            <div class="excel-cell excel-span-4">
                                <RadzenTextBox @bind-Value="_form.Inspector" TValue="string" Style="width: 100%;" />
                            </div>
                            <div class="excel-cell excel-label-cell excel-span-4">Shift</div>
                            <div class="excel-cell excel-span-4">
                                <RadzenDropDown Data="_shiftOptions" @bind-Value="_form.Shift" TValue="string" Style="width: 100%;" AllowClear="true" Placeholder="Select shift" />
                            </div>

                            <div class="excel-cell excel-label-cell excel-span-4">Line</div>
                            <div class="excel-cell excel-span-4">
                                <RadzenDropDown Data="_lineOptions"
                                                @bind-Value="_form.Line"
                                                TValue="string"
                                                AllowFiltering="true"
                                                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                                AllowClear="true"
                                                Placeholder="Select line"
                                                Style="width: 100%;" />
                            </div>
                            <div class="excel-cell excel-label-cell excel-span-4">Type of Test</div>
                            <div class="excel-cell excel-span-4">
                                <RadzenDropDown Data="_testTypeOptions" @bind-Value="_form.TypeOfTest" TValue="string" Style="width: 100%;" AllowClear="true" Placeholder="Select type" />
                            </div>
                            <div class="excel-cell excel-label-cell excel-span-4">Pass</div>
                            <div class="excel-cell excel-span-4">
                                <RadzenDropDown Data="_passOptions" @bind-Value="_form.PassStatus" TValue="string" Style="width: 100%;" AllowClear="true" Placeholder="Select" />
                            </div>
                            <div class="excel-cell excel-label-cell excel-span-4">Adjustments Required</div>
                            <div class="excel-cell excel-span-12">
                                <RadzenTextBox @bind-Value="_form.AdjustmentsRequired" TValue="string" Style="width: 100%;" />
                            </div>

                            <div class="excel-cell excel-label-cell excel-span-4">EddySonix Cycle (Q10)</div>
                            <div class="excel-cell excel-span-4">
                                <RadzenNumeric @bind-Value="_form.Q10" TValue="int?" Min="1" Max="4" Step="1" Style="width: 100%;" />
                            </div>
                            <div class="excel-cell excel-label-cell excel-span-4">EddySonix Judgement</div>
                            <div class="excel-cell excel-span-12">
                                <RadzenTextBox @bind-Value="_form.EddysonixJudgement" TValue="string" Style="width: 100%;" />
                            </div>

                            <div class="excel-cell excel-label-cell excel-span-4">Notes</div>
                            <div class="excel-cell excel-span-20 excel-note-area">
                                <RadzenTextArea @bind-Value="_form.Notes" TValue="string" Rows="3" />
                            </div>

                            <div class="excel-cell excel-label-yellow excel-span-12 align-center">BJ SIDE</div>
                            <div class="excel-cell excel-label-yellow excel-span-12 align-center">DOJ SIDE</div>

                            <div class="excel-cell excel-span-12 align-top wrap">
                                <div class="excel-tag">Non Hardened Area: <strong>@DisplayValue(_selectedRecord?.BjNonHardenedArea)</strong></div>
                                <div class="excel-tag">@BjSplineLabel: <strong>@DisplayValue(_selectedRecord?.BjSplineOpdDisplay)</strong></div>
                                <table class="excel-input-table">
                                    <thead>
                                        <tr>
                                            <th>Axis</th>
                                            <th>Non Hardened Area</th>
                                            <th>@BjSplineLabel</th>
                                            <th>Bottom SPLINE O.P.D.</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var measurement in _bjMeasurements)
                                        {
                                            <tr>
                                                <td class="label-cell">@measurement.Position</td>
                                                <td>
                                                    <RadzenNumeric @bind-Value="measurement.NonHardened" TValue="decimal?" Style="width: 100%;" Step="0.001" />
                                                </td>
                                                <td>
                                                    <RadzenNumeric @bind-Value="measurement.TopSpline" TValue="decimal?" Style="width: 100%;" Step="0.001" />
                                                </td>
                                                <td>
                                                    <RadzenNumeric @bind-Value="measurement.BottomSpline" TValue="decimal?" Style="width: 100%;" Step="0.001" />
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                            <div class="excel-cell excel-span-12 align-top wrap">
                                <div class="excel-tag">Non Hardened Area: <strong>@DisplayValue(_selectedRecord?.DojNonHardenedArea)</strong></div>
                                <div class="excel-tag">@BjSplineLabel: <strong>@DisplayValue(_selectedRecord?.DojSplineOpdDisplay)</strong></div>
                                <table class="excel-input-table">
                                    <thead>
                                        <tr>
                                            <th>Axis</th>
                                            <th>Non Hardened Area</th>
                                            <th>@BjSplineLabel</th>
                                            <th>Bottom SPLINE O.P.D.</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var measurement in _dojMeasurements)
                                        {
                                            <tr>
                                                <td class="label-cell">@measurement.Position</td>
                                                <td>
                                                    <RadzenNumeric @bind-Value="measurement.NonHardened" TValue="decimal?" Style="width: 100%;" Step="0.001" />
                                                </td>
                                                <td>
                                                    <RadzenNumeric @bind-Value="measurement.TopSpline" TValue="decimal?" Style="width: 100%;" Step="0.001" />
                                                </td>
                                                <td>
                                                    <RadzenNumeric @bind-Value="measurement.BottomSpline" TValue="decimal?" Style="width: 100%;" Step="0.001" />
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>

                            <div class="excel-cell excel-label-yellow excel-span-12 align-center">Rockwell Hardness &amp; Case Depth</div>
                            <div class="excel-cell excel-label-yellow excel-span-12 align-center">Gauges &amp; EddySonix Setup</div>

                            <div class="excel-cell excel-span-12 align-top wrap">
                                <div class="excel-tag">Rockwell Spec: <strong>@DisplayValue(_selectedRecord?.Hardness)</strong></div>
                                <div class="excel-tag">Case Depth Spec: <strong>@DisplayValue(_selectedRecord?.CaseDepth)</strong></div>
                                <table class="excel-input-table">
                                    <thead>
                                        <tr>
                                            <th>Point</th>
                                            <th>Measurement</th>
                                            <th>Pass?</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var point in _hardnessPoints)
                                        {
                                            <tr>
                                                <td class="label-cell">@point.Position</td>
                                                <td>
                                                    <RadzenNumeric @bind-Value="point.Value" TValue="decimal?" Style="width: 100%;" Step="0.1" />
                                                </td>
                                                <td>
                                                    <RadzenCheckBox @bind-Value="point.Pass" TValue="bool?" TriState="true" />
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                            <div class="excel-cell excel-span-12 align-top wrap">
                                <div class="excel-summary-callout">
                                    <div># Pieces to Scan: @FormatNumber(_selectedRecord?.CutPieceCount)</div>
                                    <div>EddySonix Program: @DisplayValue(_selectedRecord?.Eddysonix)</div>
                                    <div>Cycle Assignment (Q11): @DisplayValue(ComputeQ11())</div>
                                    <div>CQI Indicator (Q12): @DisplayValue(ComputeCqiIndicator())</div>
                                    <div>Scan Required: @(ScanRequired ? "YES" : "NO")</div>
                                </div>
                                <div class="excel-legend">
                                    <div class="excel-legend-item">
                                        <span class="excel-legend-swatch" style="background:#ffe699;"></span>
                                        <span>Gauge References</span>
                                    </div>
                                    <div class="excel-legend-item">
                                        <span class="excel-legend-swatch" style="background:#c6efce;"></span>
                                        <span>Scan &amp; CQI Indicators</span>
                                    </div>
                                    <div class="excel-legend-item">
                                        <span class="excel-legend-swatch" style="background:#fde9d9;"></span>
                                        <span>Operator Notes</span>
                                    </div>
                                </div>
                                <div class="excel-grid excel-grid-12" style="margin-top:0.75rem;">
                                    <div class="excel-cell excel-label-cell excel-span-12 align-center">Gauge &amp; Fixture Summary</div>
                                    <div class="excel-cell excel-span-6">BJ Spline Gauge: @DisplayValue(FormatNumber(_selectedRecord?.BjSplineOpdNominal, includePlusMinus: true, tolerance: _selectedRecord?.BjSplineOpdTolerance))</div>
                                    <div class="excel-cell excel-span-6">DOJ Spline Gauge: @DisplayValue(FormatNumber(_selectedRecord?.DojSplineOpdNominal, includePlusMinus: true, tolerance: _selectedRecord?.DojSplineOpdTolerance))</div>
                                    <div class="excel-cell excel-span-6">BJ Clip Ring Gauge: @DisplayValue(_selectedRecord?.BjClipRingGauge)</div>
                                    <div class="excel-cell excel-span-6">DOJ Clip Ring Gauge: @DisplayValue(_selectedRecord?.DojClipRingGauge)</div>
                                    <div class="excel-cell excel-span-6">BJ H Gauge: @DisplayValue(_selectedRecord?.BjHGauge)</div>
                                    <div class="excel-cell excel-span-6">DOJ H Gauge: @DisplayValue(_selectedRecord?.DojHGauge)</div>
                                </div>
                            </div>

                            <div class="excel-cell excel-label-yellow excel-span-24 align-center">Cut &amp; Marking Dimensions</div>
                            <div class="excel-cell excel-span-24 align-top wrap">
                                <table class="excel-input-table">
                                    <thead>
                                        <tr>
                                            <th>Segment</th>
                                            <th>Start</th>
                                            <th>End</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var segment in GetCutSegments())
                                        {
                                            <tr>
                                                <td class="label-cell">@segment.Label</td>
                                                <td>@DisplayValue(segment.Start)</td>
                                                <td>@DisplayValue(segment.End)</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>

                            <div class="excel-cell excel-span-24 align-top">
                                <div class="excel-sticky-notes">
                                    <div class="excel-summary-callout">Clip to Clip Spec: @DisplayValue(_selectedRecord?.ClipGrooveToClipGroove)</div>
                                    <div class="excel-summary-callout">C to C Measure Location: @DisplayValue(_selectedRecord?.ClipGrooveMeasureLocation)</div>
                                    <div class="excel-summary-callout">Special Instructions: @DisplayValue(_selectedRecord?.SpecialInstructions)</div>
                                </div>
                            </div>

                            <div class="excel-cell excel-label-cell excel-span-6 align-center">Special Instruction Notes</div>
                            <div class="excel-cell excel-span-18 excel-note-area">
                                <RadzenTextArea @bind-Value="_form.MarkingNotes" TValue="string" Rows="3" Placeholder="Record BJ/DOJ spline patterns, cut layouts, etc." />
                            </div>
                        </div>
                    </div>
                </ChildContent>
            </RadzenTabsItem>
            <RadzenTabsItem Text="Traveler">
                <ChildContent>
                    <div class="excel-workbook">
                        <div class="excel-grid excel-grid-18">
                            <div class="excel-cell excel-title-cell excel-span-10 align-center">HT INSPECTION TRAVELER</div>
                            <div class="excel-cell excel-action-cell excel-span-4">
                                <RadzenButton Text="Update Traveler" Disabled="true" />
                            </div>
                            <div class="excel-cell excel-action-cell excel-span-4">
                                <RadzenButton Text="Update Cut Pieces" Disabled="true" />
                            </div>

                            <div class="excel-cell excel-label-cell excel-span-3">Submission Time</div>
                            <div class="excel-cell excel-span-3">@DisplayValue(_form.Time?.ToShortTimeString())</div>
                            <div class="excel-cell excel-label-cell excel-span-3">Submission Date</div>
                            <div class="excel-cell excel-span-3">@DisplayValue(_form.Date?.ToShortDateString())</div>
                            <div class="excel-cell excel-label-cell excel-span-3">Total Pcs</div>
                            <div class="excel-cell excel-span-3">@FormatNumber(_selectedRecord?.CutPieceCount)</div>

                            <div class="excel-cell excel-label-yellow excel-span-9 align-center">Cut and Split</div>
                            <div class="excel-cell excel-label-yellow excel-span-9 align-center">Macro Inspection</div>
                            <div class="excel-cell excel-span-9 excel-note-area">
                                <RadzenTextArea @bind-Value="_form.TravelerCutAndSplit" TValue="string" Rows="4" />
                            </div>
                            <div class="excel-cell excel-span-9 excel-note-area">
                                <RadzenTextArea @bind-Value="_form.TravelerMacroInspection" TValue="string" Rows="4" />
                            </div>

                            <div class="excel-cell excel-label-yellow excel-span-9 align-center">Polish</div>
                            <div class="excel-cell excel-label-yellow excel-span-9 align-center">Case Depth</div>
                            <div class="excel-cell excel-span-9 excel-note-area">
                                <RadzenTextArea @bind-Value="_form.TravelerPolish" TValue="string" Rows="4" />
                            </div>
                            <div class="excel-cell excel-span-9 excel-note-area">
                                <RadzenTextArea @bind-Value="_form.TravelerCaseDepth" TValue="string" Rows="4" />
                            </div>

                            <div class="excel-cell excel-label-yellow excel-span-9 align-center">Microstructure &amp; Grain Size</div>
                            <div class="excel-cell excel-label-yellow excel-span-9 align-center">Special Instructions</div>
                            <div class="excel-cell excel-span-9 excel-note-area">
                                <RadzenTextArea @bind-Value="_form.TravelerMicrostructure" TValue="string" Rows="4" />
                            </div>
                            <div class="excel-cell excel-span-9 excel-note-area">
                                <RadzenTextArea @bind-Value="_form.TravelerSpecialInstructions" TValue="string" Rows="4" />
                            </div>

                            <div class="excel-cell excel-span-18 align-top wrap">
                                <table class="excel-input-table">
                                    <thead>
                                        <tr>
                                            <th>Axis</th>
                                            <th>Status</th>
                                            <th>Notes</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var axis in _travelerAxes)
                                        {
                                            <tr>
                                                <td class="label-cell">@axis.Axis</td>
                                                <td>
                                                    <RadzenDropDown Data="_passOptions" @bind-Value="axis.Status" TValue="string" AllowClear="true" Style="width: 100%;" Placeholder="Select" />
                                                </td>
                                                <td>
                                                    <RadzenTextBox @bind-Value="axis.Notes" TValue="string" Style="width: 100%;" />
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </ChildContent>
            </RadzenTabsItem>
            <RadzenTabsItem Text="Adjustment Ticket">
                <ChildContent>
                    <div class="excel-workbook">
                        <div class="excel-grid excel-grid-24">
                            <div class="excel-cell excel-title-cell excel-span-24 align-center">ADJUSTMENT TICKET</div>
                            <div class="excel-cell excel-span-24 align-top wrap">
                                <table class="excel-input-table">
                                    <thead>
                                        <tr>
                                            <th rowspan="2">Axis</th>
                                            @foreach (var stage in _adjustmentStages)
                                            {
                                                <th colspan="2">@stage.Name</th>
                                            }
                                        </tr>
                                        <tr>
                                            @foreach (var stage in _adjustmentStages)
                                            {
                                                <th>BJ</th>
                                                <th>DOJ</th>
                                            }
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var axis in AdjustmentAxisLabels)
                                        {
                                            <tr>
                                                <td class="label-cell">@axis</td>
                                                @foreach (var stage in _adjustmentStages)
                                                {
                                                    var measurement = stage.Axis[axis];
                                                    <td>
                                                        <RadzenNumeric @bind-Value="measurement.Bj" TValue="decimal?" Style="width: 100%;" Step="0.001" />
                                                    </td>
                                                    <td>
                                                        <RadzenNumeric @bind-Value="measurement.Doj" TValue="decimal?" Style="width: 100%;" Step="0.001" />
                                                    </td>
                                                }
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                            <div class="excel-cell excel-span-24 excel-note-area">
                                <RadzenTextArea @bind-Value="_form.AdjustmentsRequired" TValue="string" Rows="4" Placeholder="Summarize actions taken, tooling changes, or rework performed." />
                            </div>
                        </div>
                    </div>
                </ChildContent>
            </RadzenTabsItem>
            <RadzenTabsItem Text="ESResults">
                <ChildContent>
                    <div class="excel-workbook">
                        <div class="excel-grid excel-grid-12">
                            <div class="excel-cell excel-title-cell excel-span-12 align-center">EddySonix Results</div>
                            <div class="excel-cell excel-span-12 align-top wrap">
                                <table class="excel-input-table">
                                    <thead>
                                        <tr>
                                            <th>Axis</th>
                                            <th>Observation</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var result in _esResults)
                                        {
                                            <tr>
                                                <td class="label-cell">@result.Axis</td>
                                                <td>
                                                    <RadzenTextBox @bind-Value="result.Observation" TValue="string" Style="width: 100%;" Placeholder="Record observations" />
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                            <div class="excel-cell excel-span-12 excel-note-area">
                                <RadzenTextArea @bind-Value="_form.EddysonixJudgement" TValue="string" Rows="4" Placeholder="Final disposition, QC sign-off, or retest instructions." />
                            </div>
                        </div>
                    </div>
                </ChildContent>
            </RadzenTabsItem>
        </Tabs>
    </RadzenTabs>
}

@code {
    private static readonly string[] AxisPositions = { "1/1L", "2/1R", "3/2L", "4/2R" };
    private static readonly string[] AdjustmentStageNames =
    {
        "Original Measurements",
        "First Adjustment",
        "Second Adjustment",
        "Third Adjustment",
        "Fourth Adjustment",
        "Fifth Adjustment",
        "Sixth Adjustment"
    };
    private static readonly string[] AdjustmentAxisLabels = AxisPositions.Select(p => $"Axis {p}").ToArray();

    private readonly IReadOnlyList<string> _shiftOptions = new[] { "1ST", "2ND", "3RD" };
    private readonly IReadOnlyList<string> _testTypeOptions = new[] { "Initial", "Verification", "8HR", "Final" };
    private readonly IReadOnlyList<string> _lineOptions = new[]
    {
        "H-1", "H-2", "H-3", "H-4", "H-5", "H-6",
        "H-7", "H-8", "H-9", "H-10", "H-11", "H-12",
        "H-13", "H-14", "H-15", "H-16", "H-17", "H-18", "H-19"
    };
    private readonly IReadOnlyList<string> _passOptions = new[] { "PASS", "FAIL" };

    private readonly List<SplineMeasurement> _bjMeasurements = AxisPositions.Select(position => new SplineMeasurement(position)).ToList();
    private readonly List<SplineMeasurement> _dojMeasurements = AxisPositions.Select(position => new SplineMeasurement(position)).ToList();
    private readonly List<HardnessMeasurement> _hardnessPoints = new() { new("B1"), new("B2"), new("B3"), new("B4") };
    private readonly List<TravelerAxisRow> _travelerAxes = AxisPositions.Select(position => new TravelerAxisRow(position)).ToList();
    private readonly List<EsResultRow> _esResults = AxisPositions.Select(position => new EsResultRow(position)).ToList();
    private readonly List<AdjustmentStage> _adjustmentStages = AdjustmentStageNames.Select(name => new AdjustmentStage(name, AdjustmentAxisLabels)).ToList();

    private readonly HeatTreatFormState _form = new();
    private List<HeatTreatMasterRecord> _records = new();
    private HeatTreatMasterRecord? _selectedRecord;
    private bool _isLoading = true;
    private string? _loadError;

    private static readonly HashSet<string> BjVariantTokens = new(StringComparer.OrdinalIgnoreCase) { "BJ117", "BJ125" };
    private static readonly HashSet<string> Group1 = new(StringComparer.OrdinalIgnoreCase) { "H-1", "H-2", "H-3", "H-4", "H-5" };
    private static readonly HashSet<string> Group2 = new(StringComparer.OrdinalIgnoreCase) { "H-13", "H-14", "H-15", "H-16" };
    private static readonly HashSet<string> Group3 = new(StringComparer.OrdinalIgnoreCase) { "H-17", "H-18", "H-19", "H-6" };

    private bool ScanRequired => _selectedRecord?.CutPieceCount is double count && count > 0;
    private string BjSplineLabel => HasBjVariant() ? "Top SPLINE O.P.D." : "SPLINE O.P.D.";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var records = await HeatTreatService.GetMasterRecordsAsync();
            _records = records.OrderBy(r => r.PartNumber, StringComparer.OrdinalIgnoreCase).ToList();
        }
        catch (Exception ex)
        {
            _loadError = $"Unable to load master data: {ex.Message}";
        }
        finally
        {
            _isLoading = false;
        }
    }

    private void OnTimeChanged(DateTime? value)
    {
        _form.Time = value;
    }

    private async Task OnPartNumberChanged(object? value)
    {
        if (value is string partNumber && !string.IsNullOrWhiteSpace(partNumber))
        {
            _selectedRecord = _records.FirstOrDefault(record => string.Equals(record.PartNumber, partNumber, StringComparison.OrdinalIgnoreCase));
            _form.PartNumber = partNumber;
        }
        else
        {
            _selectedRecord = null;
            _form.PartNumber = null;
        }

        await InvokeAsync(StateHasChanged);
    }

    private bool HasBjVariant()
    {
        if (_selectedRecord?.PartNumber is not string partNumber)
        {
            return false;
        }

        return BjVariantTokens.Any(token => partNumber.Contains(token, StringComparison.OrdinalIgnoreCase));
    }

    private string? ComputeCqiIndicator()
    {
        return string.Equals(_selectedRecord?.CqiCustomer, "CQI Customer", StringComparison.OrdinalIgnoreCase) ? "1" : null;
    }

    private string? ComputeQ11()
    {
        if (!string.Equals(_selectedRecord?.CqiCustomer, "Non-CQI Customer", StringComparison.OrdinalIgnoreCase))
        {
            return null;
        }

        if (!string.Equals(_form.TypeOfTest, "8HR", StringComparison.OrdinalIgnoreCase))
        {
            return null;
        }

        var shift = (_form.Shift ?? string.Empty).Trim().ToUpperInvariant();
        var line = (_form.Line ?? string.Empty).Trim().ToUpperInvariant();
        if (string.IsNullOrEmpty(shift) || string.IsNullOrEmpty(line))
        {
            return null;
        }

        var qualifies =
            (Group1.Contains(line) && shift == "2ND") ||
            (Group2.Contains(line) && shift == "3RD") ||
            (Group3.Contains(line) && shift == "1ST") ||
            (Group1.Contains(line) && shift == "3RD") ||
            (Group2.Contains(line) && shift == "1ST") ||
            (Group3.Contains(line) && shift == "2ND");

        if (!qualifies)
        {
            return null;
        }

        var branchOne =
            (Group1.Contains(line) && shift == "2ND") ||
            (Group2.Contains(line) && shift == "3RD") ||
            (Group3.Contains(line) && shift == "1ST");

        return branchOne ? _form.Q10 switch
        {
            2 => "1",
            1 => "2",
            _ => null
        } : _form.Q10 switch
        {
            2 => "3",
            1 => "4",
            _ => null
        };
    }

    private IEnumerable<(string Label, string? Start, string? End)> GetCutSegments()
    {
        if (_selectedRecord is null)
        {
            yield break;
        }

        yield return ("A", _selectedRecord.AStart, _selectedRecord.AEnd);
        yield return ("B", _selectedRecord.BStart, _selectedRecord.BEnd);
        yield return ("C", _selectedRecord.CStart, _selectedRecord.CEnd);
        yield return ("D", _selectedRecord.DStart, _selectedRecord.DEnd);
        yield return ("E", _selectedRecord.EStart, _selectedRecord.EEnd);
        yield return ("F", _selectedRecord.FStart, _selectedRecord.FEnd);
        yield return ("G", _selectedRecord.GStart, _selectedRecord.GEnd);
        yield return ("H", _selectedRecord.HStart, _selectedRecord.HEnd);
        yield return ("I", _selectedRecord.IStart, _selectedRecord.IEnd);
    }

    private static string DisplayValue(string? value)
    {
        return string.IsNullOrWhiteSpace(value) ? "--" : value;
    }

    private static string DisplayValue(decimal? value)
    {
        return value.HasValue ? value.Value.ToString("0.###") : "--";
    }

    private static string FormatNumber(double? value, bool includePlusMinus = false, double? tolerance = null)
    {
        if (!value.HasValue)
        {
            return "--";
        }

        if (!includePlusMinus || !tolerance.HasValue)
        {
            return value.Value.ToString("0.###");
        }

        return $"{value.Value:0.###} Â± {tolerance.Value:0.###}";
    }

    private record SplineMeasurement
    {
        public SplineMeasurement(string position)
        {
            Position = position;
        }

        public string Position { get; }
        public decimal? NonHardened { get; set; }
        public decimal? TopSpline { get; set; }
        public decimal? BottomSpline { get; set; }
    }

    private record HardnessMeasurement(string Position)
    {
        public decimal? Value { get; set; }
        public bool? Pass { get; set; }
    }

    private class TravelerAxisRow
    {
        public TravelerAxisRow(string axis)
        {
            Axis = axis;
        }

        public string Axis { get; }
        public string? Status { get; set; }
        public string? Notes { get; set; }
    }

    private class EsResultRow
    {
        public EsResultRow(string axis)
        {
            Axis = axis;
        }

        public string Axis { get; }
        public string? Observation { get; set; }
    }

    private class AdjustmentStage
    {
        public AdjustmentStage(string name, IEnumerable<string> axes)
        {
            Name = name;
            Axis = axes.ToDictionary(axis => axis, axis => new StageMeasurement(), StringComparer.OrdinalIgnoreCase);
        }

        public string Name { get; }
        public Dictionary<string, StageMeasurement> Axis { get; }
    }

    private class StageMeasurement
    {
        public decimal? Bj { get; set; }
        public decimal? Doj { get; set; }
    }

    private class HeatTreatFormState
    {
        public DateTime? Date { get; set; } = DateTime.Today;
        public DateTime? Time { get; set; } = DateTime.Today.Add(DateTime.Now.TimeOfDay);
        public string? Inspector { get; set; }
        public string? Shift { get; set; }
        public string? Line { get; set; }
        public string? TypeOfTest { get; set; }
        public string? PartNumber { get; set; }
        public string? StampNumber { get; set; }
        public string? PassStatus { get; set; }
        public string? AdjustmentsRequired { get; set; }
        public int? Q10 { get; set; }
        public string? EddysonixJudgement { get; set; }
        public string? Notes { get; set; }
        public string? MarkingNotes { get; set; }
        public string? TravelerCutAndSplit { get; set; }
        public string? TravelerMacroInspection { get; set; }
        public string? TravelerPolish { get; set; }
        public string? TravelerCaseDepth { get; set; }
        public string? TravelerMicrostructure { get; set; }
        public string? TravelerSpecialInstructions { get; set; }
    }
}
